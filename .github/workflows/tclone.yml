name: Sync Upstream to Main

on:
  workflow_call:
    inputs:
      upstream-repo:
        required: true
        type: string
      main-repo:
        required: true
        type: string
    secrets:
      ACCESS_TOKEN:
        required: true
      SSH_KEY:
        required: true

jobs:
  synchronize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Create Main Repo (if not exists)
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          REPO_EXIST=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/${{ inputs.main-repo }}")
          if [ $REPO_EXIST -eq 404 ]; then
            echo "Creating repository ${{ inputs.main-repo }}"
            curl -X POST -H "Authorization: token $ACCESS_TOKEN" -d '{"name":"'"${{ inputs.main-repo }}"'"}' "https://api.github.com/user/repos"
          else
            echo "Repository ${{ inputs.main-repo }} already exists"
          fi
    

      - name: Add SSH key
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p /home/runner/.ssh
            ssh-keyscan github.com >> /home/runner/.ssh/known_hosts
            # SSH_KEY is the name of the repository secret
            echo "${{ secrets.SSH_KEY }}" > /home/runner/.ssh/id_rsa 
            chmod 600 /home/runner/.ssh/id_rsa 
            chmod 700 /home/runner/.ssh
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
            ssh-add /home/runner/.ssh/id_rsa 


      - name: Set Git Credentials
        run: |
          git config --global user.email "bbbeeeaaabbb9@gmail.com"
          git config --global user.name "ghost8658private"

      - name: Add Upstream Remote
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          git remote set-url origin git@github.com:ghost8658private/ghost8658private-worktclone
          git remote add upstream git@github.com:${{ inputs.upstream-repo }}
          git remote -v

      - name: Fetch Upstream Changes
        run: |
          git fetch upstream main

      - name: Push Upstream Changes to Main Repo
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          #git config pull.rebase false
          #git pull upstream main --allow-unrelated-histories
          ls
          #git checkout -b main
          #git pull origin --allow-unrelated-histories 
          #ls
          #git push git@github.com:ghost8658private/ghost8658private-worktclone #HEAD:main
          git remote remove origin
          git remote add Second git@github.com:ghost8658private/ghost8658private-worktclone.git
          git commit -m "first commit"
          git branch -M main
          git push -u second main
